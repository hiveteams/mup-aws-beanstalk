# This nginx config is used with platforms based on Amazon Linux AMI
# (the version before Amazon Linux 2)
<% if(forceSSL) { %>
if ($http_x_forwarded_proto = "http") {
  return 301 https://$host$request_uri;
}
<% } %>

location / {
  proxy_pass          http://unix:/var/app/current/meteor.sock;
  proxy_http_version  1.1;

  proxy_set_header    Connection          $connection_upgrade;
  proxy_set_header    Upgrade             $http_upgrade;
  proxy_set_header    Host                $host;
  proxy_set_header    X-Real-IP           $remote_addr;
  proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;

  <% if(forceSSL) { %>
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains;";
  <% } %>
}

location /healthcheck {
  return 200 "App is up.";


  <% if(forceSSL) { %>
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains;";
  <% } %>
}


location ~* /packages/.+\.(eot|ttf|woff)$ {
  root /var/app/current/programs/web.browser;
  access_log off;
  add_header Access-Control-Allow-Origin *;
  add_header Vary Origin;
  add_header Pragma public;
  add_header Cache-Control "public";
  expires max;
}

location ~* \.(eot|ttf|woff)$ {
  root /var/app/current/programs/web.browser/app;
  access_log off;
  add_header Access-Control-Allow-Origin *;
  add_header Vary Origin;
  add_header Pragma public;
  add_header Cache-Control "public";
  expires max;
}


location /aws-health-check-3984729847289743128904723 {
  proxy_pass http://127.0.0.1:8039;
  proxy_set_header Connection "";
  proxy_http_version 1.1;
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "upgrade";
}

# gzip on;
# gzip_comp_level 4;
# gzip_types text/html text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
